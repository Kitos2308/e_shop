{"ast":null,"code":"var _jsxFileName = \"/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login, getUnRegisterUserData } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\nimport s from './Login.module.css';\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: s.loginBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, createField(\"Email\", \"email\", [required], Input), createField(\"Password\", \"password\", [required], Input, {\n    type: \"password\"\n  }), captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  getUnRegisterUserData: state.auth.getUnRegisterUserData\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  getUnRegisterUserData\n})(Login);","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","createField","Input","required","connect","login","getUnRegisterUserData","Redirect","style","s","LoginForm","handleSubmit","error","captchaUrl","loginBlock","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,qBAAf,QAA2C,0BAA3C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACrD,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,SAAS,EAAEF,CAAC,CAACK,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CADf,EAEKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;AAACa,IAAAA,IAAI,EAAE;AAAP,GAA5C,CAFhB,EAMMF,UAAU,IAAKZ,WAAW,CAAC,oBAAD,EAAuB,SAAvB,EAAkC,CAACE,QAAD,CAAlC,EAA8CD,KAA9C,EAAqD,EAArD,CANhC,EASKU,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAEJ,KAAK,CAACQ,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLJ,KADK,CATd,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbJ,CADJ;AAmBH,CApBD;;AAsBA,MAAMK,cAAc,GAAGjB,SAAS,CAAC;AAACkB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BR,SAA3B,CAAvB;;AAEA,MAAMS,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACf,KAAN,CAAYiB,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC;AACH,GAFD;;AAIA,MAAIJ,KAAK,CAACK,MAAV,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEJ,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAbD;;AAcA,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH,MADa;AAEhCnB,EAAAA,qBAAqB,EAAEqB,KAAK,CAACC,IAAN,CAAWtB;AAFF,CAAZ,CAAxB;;AAKA,eAAeF,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAlB,CAAP,CAAyDa,KAAzD,CAAf","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login, getUnRegisterUserData} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\nimport s from './Login.module.css';\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit} className={s.loginBlock}>\n           {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {/*{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}*/}\n\n            {/*{ captchaUrl && <img src={captchaUrl} />}*/}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/empty\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    getUnRegisterUserData: state.auth.getUnRegisterUserData,\n})\n\nexport default connect(mapStateToProps, {login, getUnRegisterUserData})(Login);"]},"metadata":{},"sourceType":"module"}