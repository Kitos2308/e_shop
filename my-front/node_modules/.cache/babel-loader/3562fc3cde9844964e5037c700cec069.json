{"ast":null,"code":"var _jsxFileName = \"/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Category/CategoryContainer.jsx\";\nimport React from 'react';\nimport Category from \"./Category\";\nimport { getCategoryData } from \"../../redux/category-data-reducer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass CategoryContainer extends React.Component {\n  // constructor(props) {\n  // super(props);\n  //  this.props.categoryname = props.match.params.categoryname;\n  // this.props.subcategoryname = props.match.params.subcategoryname;\n  // alert(categoryname)\n  // alert(subcategoryname)\n  // }\n  // constructor({ match, ...props }) {\n  //     super(props);\n  //     console.log(match.params)\n  // }\n  componentDidMount() {\n    let categoryname = this.props.match.params.categoryname;\n    alert(categoryname);\n    this.props.getCategoryData();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.categoryname != prevProps.match.params.categoryname) {\n      alert(this.props.match.params.categoryname);\n    }\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(Category, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.categorydata.data\n}); // export default connect(mapStateToProps, {getCategoryData,  })(CategoryContainer);\n\n\nexport default compose(connect(mapStateToProps, {\n  getCategoryData\n}), withRouter)(CategoryContainer);","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Category/CategoryContainer.jsx"],"names":["React","Category","getCategoryData","connect","compose","withRouter","CategoryContainer","Component","componentDidMount","categoryname","props","match","params","alert","componentDidUpdate","prevProps","prevState","snapshot","render","mapStateToProps","state","data","categorydata"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAUC,eAAV,QAAmC,mCAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAIA,MAAMC,iBAAN,SAAgCN,KAAK,CAACO,SAAtC,CAAgD;AAC3C;AACA;AACA;AACA;AACA;AACA;AACF;AAEC;AACA;AACA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AACpB,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,YAA3C;AACAI,IAAAA,KAAK,CAACJ,YAAD,CAAL;AACE,SAAKC,KAAL,CAAWR,eAAX;AACD;;AAEDY,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACnD,QAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,YAAxB,IAAwCM,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBH,YAAnE,EAAkF;AAC9EI,MAAAA,KAAK,CAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,YAAzB,CAAL;AACH;AACJ;;AAEGS,EAAAA,MAAM,GAAG;AACL;AACA,wBAAO,oBAAC,QAAD,oBAAc,KAAKR,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AA5B2C;;AA8BhD,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADO,CAAZ,CAAxB,C,CAKA;;;AAEA,eAAejB,OAAO,CAClBD,OAAO,CAACgB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CADW,EAElBG,UAFkB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React from 'react';\nimport Category from \"./Category\";\nimport {  getCategoryData,  } from \"../../redux/category-data-reducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\n\n\n\nclass CategoryContainer extends React.Component {\n     // constructor(props) {\n     // super(props);\n     //  this.props.categoryname = props.match.params.categoryname;\n     // this.props.subcategoryname = props.match.params.subcategoryname;\n     // alert(categoryname)\n     // alert(subcategoryname)\n   // }\n\n    // constructor({ match, ...props }) {\n    //     super(props);\n    //     console.log(match.params)\n    // }\n    componentDidMount() {\n    let categoryname = this.props.match.params.categoryname;\n    alert(categoryname)\n      this.props.getCategoryData();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.categoryname != prevProps.match.params.categoryname ) {\n        alert(this.props.match.params.categoryname)\n    }\n}\n\n    render() {\n        debugger\n        return <Category {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    data: state.categorydata.data\n\n});\n\n// export default connect(mapStateToProps, {getCategoryData,  })(CategoryContainer);\n\nexport default compose(\n    connect(mapStateToProps, {getCategoryData}),\n    withRouter\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}