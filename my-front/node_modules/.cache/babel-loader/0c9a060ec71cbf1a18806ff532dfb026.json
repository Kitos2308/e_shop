{"ast":null,"code":"var _jsxFileName = \"/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Navbar/NavbarContainer.jsx\";\nimport React from 'react';\nimport Navbar from \"./Navbar\";\nimport { connect } from \"react-redux\";\nimport { getCategory, setOpen } from \"../../redux/navbar-reducer\";\n\nclass NavbarContainer extends React.Component {\n  componentDidMount() {\n    this.getCategory;\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(Navbar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isOpen: state.navbar.isOpen\n});\n\nexport default connect(mapStateToProps, {\n  getCategory,\n  setOpen\n})(NavbarContainer);","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Navbar/NavbarContainer.jsx"],"names":["React","Navbar","connect","getCategory","setOpen","NavbarContainer","Component","componentDidMount","render","props","mapStateToProps","state","isOpen","navbar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAUC,WAAV,EAAuBC,OAAvB,QAAsC,4BAAtC;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AAElB,SAAKJ,WAAL;AACD;;AAIDK,EAAAA,MAAM,GAAG;AACL;AACA,wBAAO,oBAAC,MAAD,oBAAY,KAAKC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AAXyC;;AAa9C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,MAAM,EAAED,KAAK,CAACE,MAAN,CAAaD;AADW,CAAZ,CAAxB;;AAKA,eAAeV,OAAO,CAACQ,eAAD,EAAkB;AAACP,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAmDC,eAAnD,CAAf","sourcesContent":["import React from 'react';\nimport Navbar from \"./Navbar\";\nimport {connect} from \"react-redux\";\nimport {  getCategory, setOpen } from \"../../redux/navbar-reducer\";\n\nclass NavbarContainer extends React.Component {\n    componentDidMount() {\n\n      this.getCategory;\n    }\n\n\n\n    render() {\n        debugger\n        return <Navbar {...this.props}/>\n    }\n}\nconst mapStateToProps = (state) => ({\n    isOpen: state.navbar.isOpen\n\n});\n\nexport default connect(mapStateToProps, {getCategory, setOpen, })(NavbarContainer);"]},"metadata":{},"sourceType":"module"}