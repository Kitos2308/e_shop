{"ast":null,"code":"import { categoryAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_OPEN = 'SET_OPEN';\nconst SET_CATEGORY_DATA = 'SET_CATEGORY_DATA'; // const GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n  isOpen: false,\n  data: []\n};\n\nconst navReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_OPEN:\n      return { ...state,\n        ...action.isOpen\n      };\n\n    case SET_CATEGORY_DATA:\n      return { ...state,\n        profile: action.profile\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setOpen = isOpen => ({\n  type: SET_OPEN,\n  isOpen\n});\nexport const setCategoryData = data => ({\n  type: SET_CATEGORY_DATA,\n  data\n});\nexport const getCategory = () => async dispatch => {\n  debugger;\n  let response = await categoryAPI.get_category();\n\n  if (response.data.resultCode === \"0\") {\n    let {\n      data_\n    } = response.data.data;\n    dispatch(setCategoryData(data_));\n  }\n};\nexport default navReducer;","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/redux/navbar-reducer.js"],"names":["categoryAPI","stopSubmit","SET_OPEN","SET_CATEGORY_DATA","initialState","isOpen","data","navReducer","state","action","type","profile","setOpen","setCategoryData","getCategory","dispatch","response","get_category","resultCode","data_"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,YAA1B;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAGA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B,C,CACA;;AAEA,IAAIC,YAAY,GAAG;AAEfC,EAAAA,MAAM,EAAE,KAFO;AAGfC,EAAAA,IAAI,EAAE;AAHS,CAAnB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEH,WAAGC,MAAM,CAACJ;AAFP,OAAP;;AAIJ,SAAKF,iBAAL;AACI,aAAQ,EAAC,GAAGK,KAAJ;AAAWG,QAAAA,OAAO,EAAEF,MAAM,CAACE;AAA3B,OAAR;;AAEJ;AACI,aAAOH,KAAP;AAVR;AAYH,CAbD;;AAgBA,OAAO,MAAMI,OAAO,GAAKP,MAAF,KAAc;AACjCK,EAAAA,IAAI,EAAER,QAD2B;AACfG,EAAAA;AADe,CAAd,CAAhB;AAIP,OAAO,MAAMQ,eAAe,GAAMP,IAAF,KAAY;AACxCI,EAAAA,IAAI,EAAEP,iBADkC;AACfG,EAAAA;AADe,CAAZ,CAAzB;AAOP,OAAO,MAAMQ,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD;AACA,MAAIC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,YAAZ,EAArB;;AACA,MAAID,QAAQ,CAACV,IAAT,CAAcY,UAAd,KAA6B,GAAjC,EAAsC;AAClC,QAAI;AAAEC,MAAAA;AAAF,QAAWH,QAAQ,CAACV,IAAT,CAAcA,IAA7B;AACAS,IAAAA,QAAQ,CAACF,eAAe,CAAEM,KAAF,CAAhB,CAAR;AACH;AACJ,CAPM;AAYP,eAAeZ,UAAf","sourcesContent":["import {categoryAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\n\nconst SET_OPEN = 'SET_OPEN'\nconst SET_CATEGORY_DATA = 'SET_CATEGORY_DATA'\n// const GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n\n    isOpen: false,\n    data: []\n};\n\nconst navReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_OPEN:\n            return {\n                ...state,\n                ...action.isOpen\n            }\n        case SET_CATEGORY_DATA:\n            return  {...state, profile: action.profile}\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setOpen = ( isOpen) => ({\n    type: SET_OPEN,   isOpen\n});\n\nexport const setCategoryData  = ( data) => ({\n    type: SET_CATEGORY_DATA, data\n});\n\n\n\n\nexport const getCategory = () => async (dispatch) => {\n    debugger\n    let response = await categoryAPI.get_category()\n    if (response.data.resultCode === \"0\") {\n        let { data_} = response.data.data;\n        dispatch(setCategoryData( data_));\n    }\n}\n\n\n\n\nexport default navReducer;"]},"metadata":{},"sourceType":"module"}