{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8000/api/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const authAPI = {\n  register(email, password, password_confirm) {\n    return instance.post(`user/register`, {\n      params: {\n        email,\n        password,\n        password_confirm\n      }\n    });\n  },\n\n  login(email, password) {\n    debugger;\n    return instance.post(`user/login`, {\n      params: {\n        email,\n        password\n      }\n    });\n  },\n\n  logout() {\n    return instance.post(`user/logout`);\n  },\n\n  me() {\n    debugger;\n    return instance.post(`user/authme`);\n  }\n\n};","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/api/auth.js"],"names":["axios","instance","create","baseURL","headers","authAPI","register","email","password","password_confirm","post","params","login","logout","me"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAE1BC,EAAAA,OAAO,EAAE,4BAFiB;AAG1BC,EAAAA,OAAO,EAAG;AACZ,oBAAgB;AADJ;AAHgB,CAAb,CAAjB;AAQA,OAAO,MAAMC,OAAO,GAAG;AAEnBC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,gBAAlB,EAAoC;AACxC,WAAOR,QAAQ,CAACS,IAAT,CAAe,eAAf,EAAgC;AAACC,MAAAA,MAAM,EAAC;AAACJ,QAAAA,KAAD;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB;AAAR,KAAhC,CAAP;AACH,GAJkB;;AAMnBG,EAAAA,KAAK,CAACL,KAAD,EAAQC,QAAR,EAAmB;AACpB;AACA,WAAOP,QAAQ,CAACS,IAAT,CAAe,YAAf,EAA4B;AAACC,MAAAA,MAAM,EAAC;AAACJ,QAAAA,KAAD;AAAQC,QAAAA;AAAR;AAAR,KAA5B,CAAP;AACH,GATkB;;AAWnBK,EAAAA,MAAM,GAAG;AACL,WAAOZ,QAAQ,CAACS,IAAT,CAAe,aAAf,CAAP;AACH,GAbkB;;AAenBI,EAAAA,EAAE,GAAG;AACD;AAEA,WAAOb,QAAQ,CAACS,IAAT,CAAe,aAAf,CAAP;AACH;;AAnBkB,CAAhB","sourcesContent":["import * as axios from \"axios\"\n\n\n\nconst instance = axios.create({\n\n    baseURL: 'http://localhost:8000/api/',\n    headers:  {\n  'Content-Type': 'application/json'}\n\n});\n\nexport const authAPI = {\n\n    register(email, password, password_confirm) {\n        return instance.post(`user/register`,  {params:{email, password, password_confirm}})\n    },\n\n    login(email, password,) {\n        debugger\n        return instance.post(`user/login`, {params:{email, password}})\n    },\n\n    logout() {\n        return instance.post(`user/logout`)\n    },\n\n    me() {\n        debugger\n\n        return instance.post(`user/authme`)\n    }\n}"]},"metadata":{},"sourceType":"module"}