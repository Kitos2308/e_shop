{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseUrl: \"http//:127.0.0.1:8000/api/\"\n});\nexport const authAPI = {\n  register(email, password, password_confirm) {\n    return instance.post(`user/register`, {\n      params: {\n        email,\n        password,\n        password_confirm\n      }\n    });\n  },\n\n  login(email, password) {\n    return instance.post(`user/login`, {\n      params: {\n        email,\n        password\n      }\n    });\n  },\n\n  logout() {\n    return instance.post(`user/logout`);\n  },\n\n  me() {\n    debugger;\n    return instance.post(`user/authme`);\n  }\n\n};","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/api/auth.js"],"names":["axios","instance","create","withCredentials","baseUrl","authAPI","register","email","password","password_confirm","post","params","login","logout","me"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CACb;AACIC,EAAAA,eAAe,EAAE,IADrB;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADa,CAAjB;AAOA,OAAO,MAAMC,OAAO,GAAG;AAEnBC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,gBAAlB,EAAoC;AACxC,WAAOR,QAAQ,CAACS,IAAT,CAAe,eAAf,EAAgC;AAACC,MAAAA,MAAM,EAAC;AAACJ,QAAAA,KAAD;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB;AAAR,KAAhC,CAAP;AACH,GAJkB;;AAMnBG,EAAAA,KAAK,CAACL,KAAD,EAAQC,QAAR,EAAmB;AACpB,WAAOP,QAAQ,CAACS,IAAT,CAAe,YAAf,EAA4B;AAACC,MAAAA,MAAM,EAAC;AAACJ,QAAAA,KAAD;AAAQC,QAAAA;AAAR;AAAR,KAA5B,CAAP;AACH,GARkB;;AAUnBK,EAAAA,MAAM,GAAG;AACL,WAAOZ,QAAQ,CAACS,IAAT,CAAe,aAAf,CAAP;AACH,GAZkB;;AAcnBI,EAAAA,EAAE,GAAG;AACD;AAEA,WAAOb,QAAQ,CAACS,IAAT,CAAe,aAAf,CAAP;AACH;;AAlBkB,CAAhB","sourcesContent":["import * as axios from \"axios\"\n\n\nconst instance = axios.create(\n    {\n        withCredentials: true,\n        baseUrl: \"http//:127.0.0.1:8000/api/\"\n    }\n);\n\nexport const authAPI = {\n\n    register(email, password, password_confirm) {\n        return instance.post(`user/register`,  {params:{email, password, password_confirm}})\n    },\n\n    login(email, password,) {\n        return instance.post(`user/login`, {params:{email, password}})\n    },\n\n    logout() {\n        return instance.post(`user/logout`)\n    },\n\n    me() {\n        debugger\n\n        return instance.post(`user/authme`)\n    }\n}"]},"metadata":{},"sourceType":"module"}