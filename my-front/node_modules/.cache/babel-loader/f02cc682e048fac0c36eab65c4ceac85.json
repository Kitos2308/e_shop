{"ast":null,"code":"var _jsxFileName = \"/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Register/Register.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { register, setRegisterUserData } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\nimport s from './Register.module.css';\n\nconst RegisterForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: s.loginBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, createField(\"Email\", \"email\", [required], Input), createField(\"Password\", \"password\", [required], Input, {\n    type: \"password\"\n  }), createField(\"Confirm Password\", \"confirm_password\", [required], Input, {\n    type: \"password\"\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n};\n\nconst RegisterReduxForm = reduxForm({\n  form: 'register'\n})(RegisterForm);\n\nconst Register = props => {\n  const onSubmit = formData => {\n    props.register(formData.email, formData.password, formData.confirm_password);\n  };\n\n  debugger;\n\n  if (props.isRegistry) {\n    alert('isRegistry true');\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(RegisterReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isRegistry: state.auth.isRegistry\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["/Users/n.dolgov/Desktop/projects/Final+code/my-front/src/components/Register/Register.jsx"],"names":["React","Field","reduxForm","createField","Input","required","connect","register","setRegisterUserData","Redirect","style","s","RegisterForm","handleSubmit","error","loginBlock","type","formSummaryError","RegisterReduxForm","form","Register","props","onSubmit","formData","email","password","confirm_password","isRegistry","alert","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,mBAAlB,QAA4C,0BAA5C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAC5C,sBACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAA8B,IAAA,SAAS,EAAEF,CAAC,CAACI,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CADf,EAEKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;AAACY,IAAAA,IAAI,EAAE;AAAP,GAA5C,CAFhB,EAGKb,WAAW,CAAC,kBAAD,EAAqB,kBAArB,EAAyC,CAACE,QAAD,CAAzC,EAAqDD,KAArD,EAA4D;AAACY,IAAAA,IAAI,EAAE;AAAP,GAA5D,CAHhB,EAUKF,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAEJ,KAAK,CAACO,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLH,KADK,CAVd,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAdJ,CADJ;AAoBH,CArBD;;AAuBA,MAAMI,iBAAiB,GAAGhB,SAAS,CAAC;AAACiB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA8BP,YAA9B,CAA1B;;AAEA,MAAMQ,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACd,QAAN,CAAegB,QAAQ,CAACC,KAAxB,EAA+BD,QAAQ,CAACE,QAAxC,EAAkDF,QAAQ,CAACG,gBAA3D;AACH,GAFD;;AAGA;;AACA,MAAIL,KAAK,CAACM,UAAV,EAAsB;AAClBC,IAAAA,KAAK,CAAC,iBAAD,CAAL;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEN,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAdD;;AAeA,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,UAAU,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADS,CAAZ,CAAxB;;AAIA,eAAerB,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAAqCa,QAArC,CAAf","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {register, setRegisterUserData} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\nimport s from './Register.module.css';\n\n\nconst RegisterForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit} className={s.loginBlock}>\n           {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(\"Confirm Password\", \"confirm_password\", [required], Input, {type: \"password\"})}\n            {/*{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}*/}\n\n            {/*{ captchaUrl && <img src={captchaUrl} />}*/}\n            {/*{ captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }*/}\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Register</button>\n            </div>\n        </form>\n    )\n}\n\nconst RegisterReduxForm = reduxForm({form: 'register'})(RegisterForm)\n\nconst Register = (props) => {\n    const onSubmit = (formData) => {\n        props.register(formData.email, formData.password, formData.confirm_password);\n    }\n    debugger\n    if (props.isRegistry) {\n        alert('isRegistry true')\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return <div>\n        <h1>Register</h1>\n        <RegisterReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isRegistry: state.auth.isRegistry\n})\n\nexport default connect(mapStateToProps, {register})(Register);"]},"metadata":{},"sourceType":"module"}